{"ast":null,"code":"var _jsxFileName = \"/Users/nydia/Documents/GitHub/portfolio-react/src/project/Weather.js\",\n  _s = $RefreshSig$();\nimport \".//weather.scss\";\nimport { useEffect, useState } from \"react\";\nimport pic1 from \".//pic1.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [weatherData, setWeatherData] = useState();\n  const [forecastData, setForecastData] = useState([{\n    day: \"THU\",\n    temp: 32,\n    icon: \"❄️\"\n  }, {\n    day: \"Fri\",\n    temp: 32,\n    icon: \"⛄️\"\n  }, {\n    day: \"Sat\",\n    temp: 42,\n    icon: \"🌨️\"\n  }, {\n    day: \"Sun\",\n    temp: 52,\n    icon: \"🌈\"\n  }, {\n    day: \"Mon\",\n    temp: 62,\n    icon: \"☀️\"\n  }]);\n  useEffect(() => {\n    const makeAPICalls = async () => {\n      const geocodingResponse = await fetch(\"http://api.openweathermap.org/geo/1.0/direct?q=Syracuse,NY,US&limit=5&appid=f10fed638ddb1d2516ce5527d9602aff\");\n      const geocodingData = await geocodingResponse.json();\n      const lat = geocodingData[0].lat;\n      const lon = geocodingData[0].lon;\n      const currentWeatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=4db60a6d7c0d43ad51b560009b74f90d&units=imperial`);\n      const currentWeatherData = await currentWeatherResponse.json();\n      // console.log(currentWeatherData);\n      setWeatherData({\n        temp: Math.round(currentWeatherData.main.temp),\n        humidity: currentWeatherData.main.humidity,\n        iconCode: currentWeatherData.weather[0].icon,\n        currentCondition: currentWeatherData.weather[0].main\n      });\n      // console.log(currentWeatherData);\n\n      const currentForecastResponse = await fetch(\"https://api.openweathermap.org/data/2.5/forecast?lat=43.0481221&lon=-76.1474244&appid=f10fed638ddb1d2516ce5527d9602aff&units=imperial\");\n      const forecastData = await currentForecastResponse.json();\n      console.log(forecastData);\n\n      //   setForecastData({\n      //     temp: Math.round(forecastData.list[0].main.temp),\n      //     humidity: forecastData.list[0].main.humidity,\n      //     iconCode: forecastData.list[0].weather[0].icon,\n      //     currentCondition: forecastData.list[0].weather[0].main,\n      //   });\n      console.log(forecastData);\n      const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n      setForecastData([{\n        day: days[new Date(forecastData.list[0].dt_txt).getDay()],\n        //forecastData.list[0],\n        temp: Math.round(forecastData.list[0].main.temp),\n        icon: forecastData.list[0].weather[0].icon\n      }, {\n        day: days[new Date(forecastData.list[8].dt_txt).getDay()],\n        //forecastData.list[0],\n        temp: Math.round(forecastData.list[0].main.temp),\n        icon: forecastData.list[8].weather[0].icon\n      }, {\n        day: days[new Date(forecastData.list[16].dt_txt).getDay()],\n        //forecastData.list[0],\n        temp: Math.round(forecastData.list[16].main.temp),\n        icon: forecastData.list[16].weather[0].icon\n      }, {\n        day: days[new Date(forecastData.list[24].dt_txt).getDay()],\n        //forecastData.list[0],\n        temp: Math.round(forecastData.list[24].main.temp),\n        icon: forecastData.list[24].weather[0].icon\n      }, {\n        day: days[new Date(forecastData.list[32].dt_txt).getDay()],\n        //forecastData.list[0],\n        temp: Math.round(forecastData.list[32].main.temp),\n        icon: forecastData.list[32].weather[0].icon\n      }]);\n\n      //make another API call using OpenWeatherMap Daily Forecast API\n      //parse the JSON\n      //console.log the data to see the strucuture of the data\n      //use the setForecastData function using the use state format above to set...\n      //...in the forecast data from the API response\n    };\n\n    makeAPICalls();\n  }, []);\n  if (!weatherData || !forecastData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pic1,\n        style: {\n          maxWidth: \"100%\"\n        },\n        alt: \"screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          id: \"weatherIcon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${weatherData.iconCode}@2x.png`,\n            alt: \"screenshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"currenttemp\",\n            children: [weatherData.temp, \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u2109 | \\u2103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-2\",\n          children: [\"Precipitation: 55% Humidity: \", weatherData.humidity, \"% wind: 10 mph\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 text-end\",\n          children: [\"Syracuse, NY 13207\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), new Date().toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), weatherData.currentCondition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        id: \"forecastRow\",\n        children: forecastData.map(dayInfo => {\n          return /*#__PURE__*/_jsxDEV(ForecastDay, {\n            day: dayInfo.day,\n            icon: dayInfo.icon,\n            temp: dayInfo.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"V0t0KQv5Q7JzgsBuImxRtm4u1GE=\");\n_c = Weather;\nconst ForecastDay = _ref => {\n  let {\n    day,\n    icon,\n    temp\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"forecastIcon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${icon}@2x.png `,\n        alt: \"screenshot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [temp, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ForecastDay;\nexport default Weather;\nvar _c, _c2;\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"ForecastDay\");","map":{"version":3,"names":["useEffect","useState","pic1","Weather","weatherData","setWeatherData","forecastData","setForecastData","day","temp","icon","makeAPICalls","geocodingResponse","fetch","geocodingData","json","lat","lon","currentWeatherResponse","currentWeatherData","Math","round","main","humidity","iconCode","weather","currentCondition","currentForecastResponse","console","log","days","Date","list","dt_txt","getDay","maxWidth","toLocaleTimeString","map","dayInfo","ForecastDay"],"sources":["/Users/nydia/Documents/GitHub/portfolio-react/src/project/Weather.js"],"sourcesContent":["\nimport \".//weather.scss\";\nimport { useEffect, useState } from \"react\";\nimport pic1 from \".//pic1.jpg\";\n\n\nfunction Weather () {\n  const [weatherData, setWeatherData] = useState();\n  const [forecastData, setForecastData] = useState([\n    { day: \"THU\", temp: 32, icon: \"❄️\" },\n    { day: \"Fri\", temp: 32, icon: \"⛄️\" },\n    { day: \"Sat\", temp: 42, icon: \"🌨️\" },\n    { day: \"Sun\", temp: 52, icon: \"🌈\" },\n    { day: \"Mon\", temp: 62, icon: \"☀️\" },\n  ]);\n  useEffect(() => {\n    const makeAPICalls = async () => {\n      const geocodingResponse = await fetch(\n        \"http://api.openweathermap.org/geo/1.0/direct?q=Syracuse,NY,US&limit=5&appid=f10fed638ddb1d2516ce5527d9602aff\"\n      );\n      const geocodingData = await geocodingResponse.json();\n      const lat = geocodingData[0].lat;\n      const lon = geocodingData[0].lon;\n\n      const currentWeatherResponse = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=4db60a6d7c0d43ad51b560009b74f90d&units=imperial`\n      );\n      const currentWeatherData = await currentWeatherResponse.json();\n      // console.log(currentWeatherData);\n      setWeatherData({\n        temp: Math.round(currentWeatherData.main.temp),\n        humidity: currentWeatherData.main.humidity,\n        iconCode: currentWeatherData.weather[0].icon,\n        currentCondition: currentWeatherData.weather[0].main,\n      });\n      // console.log(currentWeatherData);\n\n      const currentForecastResponse = await fetch(\n        \"https://api.openweathermap.org/data/2.5/forecast?lat=43.0481221&lon=-76.1474244&appid=f10fed638ddb1d2516ce5527d9602aff&units=imperial\"\n      );\n      const forecastData = await currentForecastResponse.json();\n      console.log(forecastData);\n\n      //   setForecastData({\n      //     temp: Math.round(forecastData.list[0].main.temp),\n      //     humidity: forecastData.list[0].main.humidity,\n      //     iconCode: forecastData.list[0].weather[0].icon,\n      //     currentCondition: forecastData.list[0].weather[0].main,\n      //   });\n      console.log(forecastData);\n      const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n      setForecastData([\n\t\t\n        {\n          day: days[new Date(forecastData.list[0].dt_txt).getDay()], //forecastData.list[0],\n          temp: Math.round(forecastData.list[0].main.temp),\n          icon: forecastData.list[0].weather[0].icon,\n        },\n        {\n          day: days[new Date(forecastData.list[8].dt_txt).getDay()], //forecastData.list[0],\n          temp:  Math.round(forecastData.list[0].main.temp),\n          icon: forecastData.list[8].weather[0].icon,\n        },\n        {\n\t\tday: days[new Date(forecastData.list[16].dt_txt).getDay()], //forecastData.list[0],\n\t\ttemp: Math.round(forecastData.list[16].main.temp),\n\t\ticon: forecastData.list[16].weather[0].icon,\n        },\n        {\n\t\tday: days[new Date(forecastData.list[24].dt_txt).getDay()], //forecastData.list[0],\n\t\ttemp: Math.round(forecastData.list[24].main.temp),\n\t\ticon: forecastData.list[24].weather[0].icon,\n        },\n        {\n\t\tday: days[new Date(forecastData.list[32].dt_txt).getDay()], //forecastData.list[0],\n\t\ttemp: Math.round(forecastData.list[32].main.temp),\n\t\ticon: forecastData.list[32].weather[0].icon,\n        },\n      ]);\n\n      //make another API call using OpenWeatherMap Daily Forecast API\n      //parse the JSON\n      //console.log the data to see the strucuture of the data\n      //use the setForecastData function using the use state format above to set...\n      //...in the forecast data from the API response\n    };\n    makeAPICalls();\n  }, []);\n\n  if (!weatherData || !forecastData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container weather\" >\n        <img src={pic1} style={{ maxWidth: \"100%\" }} alt=\"screenshot\"/>\n        <div className=\"row\">\n          <div className=\"col-2\" id=\"weatherIcon\">\n            <img\n              src={`http://openweathermap.org/img/wn/${weatherData.iconCode}@2x.png` } alt=\"screenshot\"\n            />\n          </div>\n          <div className=\"col-2\">\n            <div id=\"currenttemp\">{weatherData.temp}°</div>\n            <div>℉ | ℃</div>\n          </div>\n          <div className=\"col-2\">\n            Precipitation: 55% Humidity: {weatherData.humidity}% wind: 10 mph\n          </div>\n          <div className=\"col-6 text-end\">\n            Syracuse, NY 13207\n            <br />\n            {new Date().toLocaleTimeString()}\n            <br />\n            {weatherData.currentCondition}\n          </div>\n        </div>\n        {/* End of Row 1 */}\n        <hr />\n        <div className=\"row\" id=\"forecastRow\">\n          {forecastData.map((dayInfo) => {\n            return (\n              <ForecastDay\n                day={dayInfo.day}\n                icon={dayInfo.icon}\n                temp={dayInfo.temp}\n              />\n            );\n          })}\n        </div>\n        {/* <img src=\"/pic2.jpg\" style={{ maxWidth: \"100%\" }} /> */}\n        {/* End of Row 2 */}{\" \"}\n      </div>\n    </div>\n  );\n}\n\nconst ForecastDay = ({ day, icon, temp }) => {\n  return (\n    <div className=\"col text-center\">\n      <p>{day}</p>\n      <p className=\"forecastIcon\">\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png ` } alt=\"screenshot\"/>\n      </p>\n      <p>{temp}°</p>\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}